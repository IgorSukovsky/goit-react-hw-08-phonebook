{"version":3,"sources":["redux/authorization/auth-selectors.js","components/Navigation/Navigation.jsx","redux/authorization/auth-operations.js","components/UserMenu/UserMenu.jsx","components/AuthNavigation/AuthNavigation.jsx","components/AppBar/AppBar.jsx","components/Container/Container.jsx","img/phonebooksvg.png","views/HomeView.jsx","views/RegisterView.jsx","views/LoginView.jsx","redux/contacts/actions.js","redux/contacts/operations.js","redux/contacts/selectors.js","components/Form/Form.jsx","components/Filter/Filter.jsx","components/Contacts/Contacts.jsx","views/ContactsView.jsx","components/PrivateRoute.js","components/PublicRoute.js","App.jsx","redux/contacts/reducers.js","redux/authorization/auth-slice.js","redux/store.js","index.js","components/Form/Form.module.css","components/Navigation/Navigation.module.css","components/AuthNavigation/AuthNavigation.module.css","components/Contacts/Contacts.module.css","components/UserMenu/UserMenu.module.css","components/AppBar/AppBar.module.css","components/Container/Container.module.css","components/Filter/Filter.module.css","views/styles.module.css"],"names":["authSelectors","getIsLoggedIn","state","auth","isLoggedIn","getUserName","user","name","getIsFetchingCurrentUser","isFetchingCurrentUser","Navigation","className","styles","nav","link","activeClassName","activeLink","exact","to","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","rejectWithValue","post","data","toast","error","response","logIn","logOut","_","fetchCurrentUser","thunkAPI","getState","persistToken","get","UserMenu","dispatch","useDispatch","useSelector","box","username","formBtn","type","onClick","authOperations","AuthNavigation","AppBar","header","Container","children","container","minHeight","display","alignItems","justifyContent","backgroundColor","title","fontWeight","fontSize","textAlign","HomeView","style","src","logo","alt","RegisterView","useState","setName","email","setEmail","password","setPassword","setType","handleChange","target","value","text","onSubmit","e","preventDefault","form","autoComplete","label","input","onChange","placeholder","passwordControl","prev","LoginView","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","actions","number","then","catch","id","delete","getContactsItems","contacts","items","getContactsFilter","filter","getFilteredContacts","createSelector","contact","toLowerCase","includes","Form","setNumber","event","currentTarget","reset","find","elem","operations","htmlFor","pattern","required","Filter","Contacts","useEffect","map","li","ContactsView","PrivateRoute","routeProps","PublicRoute","restricted","redirectTo","shouldRedirect","App","fallback","color","height","width","timeout","path","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","createReducer","payload","action","item","fulfilled","loading","combineReducers","authSlice","createSlice","initialState","extraReducers","rejected","message","pending","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.07257bac.chunk.js","sourcesContent":["const getIsLoggedIn = state => state.auth.isLoggedIn;\r\nconst getUserName = state => state.auth.user.name;\r\nconst getIsFetchingCurrentUser = state => state.auth.isFetchingCurrentUser;\r\n\r\nconst authSelectors = {\r\n  getIsLoggedIn,\r\n  getUserName,\r\n  getIsFetchingCurrentUser,\r\n};\r\nexport default authSelectors;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './Navigation.module.css';\r\n\r\nexport default function Navigation() {\r\n  return (\r\n    <nav className={styles.nav}>\r\n      <NavLink\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n        exact\r\n        to=\"/\"\r\n      >\r\n        Home\r\n      </NavLink>\r\n      <NavLink\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n        exact\r\n        to=\"/contacts\"\r\n      >\r\n        Phonebook\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { toast } from 'react-toastify';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = createAsyncThunk(\r\n  'auth/register',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/users/signup', credentials);\r\n      token.set(data.token);\r\n      return data;\r\n    } catch (error) {\r\n      toast.error('Oops! Something went wrong');\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nconst logIn = createAsyncThunk(\r\n  'auth/login',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await axios.post('/users/login', credentials);\r\n      token.set(data.token);\r\n      return data;\r\n    } catch (error) {\r\n      toast.error('Type valid Email or Password');\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nconst logOut = createAsyncThunk(\r\n  'auth/logout',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      await axios.post('/users/logout');\r\n      token.unset();\r\n    } catch (error) {\r\n      toast.error('Error has happened');\r\n      return rejectWithValue(error.response.data);\r\n    }\r\n  },\r\n);\r\n\r\nconst fetchCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistToken = state.auth.token;\r\n\r\n    if (persistToken === null) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n    token.set(persistToken);\r\n    try {\r\n      const { data } = await axios.get('/users/current');\r\n      return data;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n  },\r\n);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { register, logOut, logIn, fetchCurrentUser };\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport authSelectors from '../../redux/authorization/auth-selectors';\r\nimport authOperations from '../../redux/authorization/auth-operations';\r\nimport styles from './UserMenu.module.css';\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUserName);\r\n\r\n  return (\r\n    <div className={styles.box}>\r\n      <span className={styles.username}>{`Hello, ${name}`}</span>\r\n      <button\r\n        className={styles.formBtn}\r\n        type=\"button\"\r\n        onClick={() => dispatch(authOperations.logOut())}\r\n      >\r\n        Log uot\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './AuthNavigation.module.css';\r\n\r\nexport default function AuthNavigation() {\r\n  return (\r\n    <nav className={styles.nav}>\r\n      <NavLink\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n        exact\r\n        to=\"/register\"\r\n      >\r\n        Registration\r\n      </NavLink>\r\n      <NavLink\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n        exact\r\n        to=\"/login\"\r\n      >\r\n        Log in\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport authSelectors from '../../redux/authorization/auth-selectors';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport AuthNavigation from '../AuthNavigation/AuthNavigation';\r\nimport styles from './AppBar.module.css';\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <header className={styles.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNavigation />}\r\n    </header>\r\n  );\r\n}\r\n","import styles from './Container.module.css';\r\n\r\nexport default function Container({ children }) {\r\n  return <div className={styles.container}>{children}</div>;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/phonebooksvg.b96dcc85.png\";","import React from 'react';\r\n\r\nimport logo from '../img/phonebooksvg.png';\r\n\r\nconst styles = {\r\n  container: {\r\n    minHeight: 'calc(100vh - 50px)',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: 'bisque',\r\n  },\r\n  title: {\r\n    fontWeight: 500,\r\n    fontSize: 48,\r\n    textAlign: 'center',\r\n  },\r\n};\r\n\r\nconst HomeView = () => (\r\n  <div style={styles.container}>\r\n    <img src={logo} alt=\"\" />\r\n  </div>\r\n);\r\n\r\nexport default HomeView;\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport authOperations from '../redux/authorization/auth-operations';\r\nimport styles from './styles.module.css';\r\n\r\nexport default function RegisterView() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [type, setType] = useState('password');\r\n  const toggleType = () => {\r\n    setType(prev => (prev === 'password' ? 'text' : 'password'));\r\n  };\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(authOperations.register({ name, email, password }));\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className={styles.text}>REGISTRATION</h1>\r\n\r\n      <form onSubmit={handleSubmit} className={styles.form} autoComplete=\"off\">\r\n        <label className={styles.label}>\r\n          <input\r\n            className={styles.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n            placeholder=\"name\"\r\n          />\r\n        </label>\r\n\r\n        <label className={styles.label}>\r\n          <input\r\n            className={styles.input}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n            placeholder=\"email\"\r\n          />\r\n        </label>\r\n\r\n        <label className={styles.label}>\r\n          <input\r\n            className={styles.input}\r\n            type={type}\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n            placeholder=\"PASSWORD\"\r\n          />\r\n          <button\r\n            className={styles.passwordControl}\r\n            type=\"button\"\r\n            onClick={toggleType}\r\n          >\r\n            &#128065;\r\n          </button>\r\n        </label>\r\n\r\n        <button type=\"submit\" className={styles.formBtn}>\r\n          Register now\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport authOperations from '../redux/authorization/auth-operations';\r\nimport styles from './styles.module.css';\r\n\r\nexport default function LoginView() {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [type, setType] = useState('password');\r\n  const toggleType = () => {\r\n    setType(prev => (prev === 'password' ? 'text' : 'password'));\r\n  };\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(authOperations.logIn({ email, password }));\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className={styles.text}>LOG-IN PAGE</h1>\r\n\r\n      <form onSubmit={handleSubmit} className={styles.form} autoComplete=\"off\">\r\n        <label className={styles.label}>\r\n          <input\r\n            className={styles.input}\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n            placeholder=\"mail:\"\r\n          />\r\n        </label>\r\n\r\n        <label className={styles.label}>\r\n          <input\r\n            className={styles.input}\r\n            type={type}\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n            placeholder=\"password:\"\r\n          />\r\n          <button\r\n            className={styles.passwordControl}\r\n            type=\"button\"\r\n            onClick={toggleType}\r\n          >\r\n            &#128065;\r\n          </button>\r\n        </label>\r\n\r\n        <button type=\"submit\" className={styles.formBtn}>\r\n          Go!\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'phonebook/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'phonebook/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('phonebook/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('phonebook/addContactRequest');\r\nexport const addContactSuccess = createAction('phonebook/addContactSuccess');\r\nexport const addContactError = createAction('phonebook/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'phonebook/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'phonebook/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('phonebook/deleteContactError');\r\n\r\nconst changeFilter = createAction('phonebook/changeFilter');\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n};\r\n","import axios from 'axios';\r\nimport * as actions from './actions';\r\n\r\n// axios.defaults.baseURL = 'http://localhost:2021';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(actions.fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n\r\n    dispatch(actions.fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(actions.fetchContactsError(error));\r\n  }\r\n};\r\n\r\nconst addNewContact =\r\n  ({ name, number }) =>\r\n  dispatch => {\r\n    dispatch(actions.addContactRequest());\r\n\r\n    axios\r\n      .post('/contacts', { name, number })\r\n      .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n      .catch(error => dispatch(actions.addContactError(error)));\r\n  };\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(actions.deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(actions.deleteContactSuccess(id)))\r\n    .catch(error => dispatch(actions.deleteContactError(error)));\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  fetchContacts,\r\n  addNewContact,\r\n  deleteContact,\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContactsItems = state => state.contacts.items;\r\nexport const getContactsFilter = state => state.contacts.filter;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getContactsItems, getContactsFilter],\r\n  (items, filter) => {\r\n    return items.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n\r\nexport const getLoadingStatus = state => state.contacts.loading;\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport operations from '../../redux/contacts/operations';\r\nimport { getContactsItems } from '../../redux/contacts/selectors';\r\nimport styles from './Form.module.css';\r\n\r\nexport default function Form() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const items = useSelector(getContactsItems);\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (items.find(elem => elem.name === name)) {\r\n      toast.error(`${name} is already in contacts`);\r\n    } else {\r\n      dispatch(operations.addNewContact({ name, number }));\r\n    }\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.form}>\r\n      <label className={styles.label} htmlFor=\"\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          className={styles.input}\r\n          placeholder=\"Name\"\r\n        />\r\n      </label>\r\n\r\n      <label className={styles.label} htmlFor=\"\">\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          className={styles.input}\r\n          placeholder=\"Number\"\r\n        />\r\n      </label>\r\n      <button className={styles.formBtn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport actions from '../../redux/contacts/actions';\r\nimport { getContactsFilter } from '../../redux/contacts/selectors';\r\nimport styles from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const value = useSelector(getContactsFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = event => dispatch(actions.changeFilter(event.target.value));\r\n  return (\r\n    <label>\r\n      <input\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        className={styles.input}\r\n        placeholder=\"Find contact by name!!!\"\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport operations from '../../redux/contacts/operations';\r\nimport { getFilteredContacts } from '../../redux/contacts/selectors';\r\nimport styles from './Contacts.module.css';\r\n\r\nexport default function Contacts() {\r\n  const contacts = useSelector(getFilteredContacts);\r\n  // const loading = useSelector(getLoadingStatus);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => dispatch(operations.fetchContacts()), [dispatch]);\r\n\r\n  const onDelete = id => {\r\n    dispatch(operations.deleteContact(id));\r\n  };\r\n\r\n  if (contacts) {\r\n    return (\r\n      <ul className={styles.contacts}>\r\n        {contacts.map(contact => (\r\n          <li className={styles.li} key={contact.id}>\r\n            <p className={styles.contact}>\r\n              {contact.name} : {contact.number}\r\n            </p>\r\n            <button\r\n              className={styles.formBtn}\r\n              type=\"button\"\r\n              onClick={() => onDelete(contact.id)}\r\n            >\r\n              X\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import { useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\n\r\nimport operations from '../redux/contacts/operations';\r\n\r\nimport Container from '../components/Container/Container';\r\nimport Form from '../components/Form/Form';\r\nimport Filter from '../components/Filter/Filter';\r\nimport Contacts from '../components/Contacts/Contacts';\r\nimport styles from './styles.module.css';\r\n\r\nexport default function ContactsView() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(operations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <Container>\r\n        <h1 className={styles.text}>PHONEBOOK</h1>\r\n        <Form />\r\n        <h2 className={styles.text}>CONTACTS</h2>\r\n        <Filter />\r\n        <Contacts />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport authSelectors from '../redux/authorization/auth-selectors';\r\n\r\nexport default function PrivateRoute({ children, ...routeProps }) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to=\"/login\" />}\r\n    </Route>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router';\r\n\r\nimport authSelectors from '../redux/authorization/auth-selectors';\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import { useEffect, Suspense } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Switch } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport AppBar from './components/AppBar/AppBar';\r\nimport Container from './components/Container/Container';\r\nimport HomeView from './views/HomeView';\r\nimport RegisterView from './views/RegisterView';\r\nimport LoginView from './views/LoginView';\r\nimport ContactsView from './views/ContactsView';\r\n\r\nimport authOperations from './redux/authorization/auth-operations';\r\nimport authSelectors from './redux/authorization/auth-selectors';\r\n\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\n\r\nexport default function App() {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const isFetchingCurrentUser = useSelector(\r\n    authSelectors.getIsFetchingCurrentUser,\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(authOperations.fetchCurrentUser());\r\n  }, [dispatch]);\r\n  return (\r\n    !isFetchingCurrentUser && (\r\n      <Container>\r\n        <AppBar />\r\n        <Suspense\r\n          fallback={\r\n            <Loader\r\n              type=\"ThreeDots\"\r\n              color=\"#00BFFF\"\r\n              height={80}\r\n              width={80}\r\n              timeout={3000}\r\n            />\r\n          }\r\n        >\r\n          <Switch>\r\n            <PublicRoute exact path=\"/\">\r\n              <HomeView />\r\n            </PublicRoute>\r\n\r\n            <PublicRoute path=\"/register\" restricted redirectTo=\"/contacts\">\r\n              <RegisterView />\r\n            </PublicRoute>\r\n\r\n            <PublicRoute path=\"/login\" restricted redirectTo=\"/contacts\">\r\n              <LoginView />\r\n            </PublicRoute>\r\n\r\n            <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\r\n              <ContactsView />\r\n            </PrivateRoute>\r\n          </Switch>\r\n        </Suspense>\r\n\r\n        <ToastContainer\r\n          position=\"top-right\"\r\n          autoClose={5000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      </Container>\r\n    )\r\n  );\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport actions from './actions';\r\nimport authOperations from '../authorization/auth-operations';\r\n\r\nconst items = createReducer([], {\r\n  [actions.fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [actions.addContactSuccess]: (state, action) => [...state, action.payload],\r\n  [actions.deleteContactSuccess]: (state, action) =>\r\n    state.filter(item => item.id !== action.payload),\r\n  [authOperations.logOut.fulfilled]() {\r\n    return [];\r\n  },\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [actions.fetchContactsRequest]: () => true,\r\n  [actions.fetchContactsSuccess]: () => false,\r\n  [actions.fetchContactsError]: () => false,\r\n  [actions.addContactRequest]: () => true,\r\n  [actions.addContactSuccess]: () => false,\r\n  [actions.addContactError]: () => false,\r\n  [actions.deleteContactRequest]: () => true,\r\n  [actions.deleteContactSuccess]: () => false,\r\n  [actions.deleteContactError]: () => false,\r\n  [authOperations.logOut.fulfilled]() {\r\n    return false;\r\n  },\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, action) => action.payload,\r\n  [authOperations.logOut.fulfilled]() {\r\n    return '';\r\n  },\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [actions.fetchContactsError]: (_, { payload }) => payload,\r\n  [actions.addContactError]: (_, { payload }) => payload,\r\n  [actions.deleteContactError]: (_, { payload }) => payload,\r\n  [authOperations.logOut.fulfilled]() {\r\n    return null;\r\n  },\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport authOperations from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  error: null,\r\n  isFetchingCurrentUser: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.register.rejected](state, action) {\r\n      state.error = action.payload.message;\r\n    },\r\n\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n\r\n    [authOperations.logIn.rejected](state, action) {\r\n      state.error = action.payload.message;\r\n    },\r\n\r\n    [authOperations.logIn.pending](state, action) {\r\n      state.error = '';\r\n    },\r\n\r\n    [authOperations.logOut.fulfilled](state, action) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n\r\n    [authOperations.logOut.rejected](state, action) {\r\n      state.error = action.payload.message;\r\n    },\r\n\r\n    [authOperations.fetchCurrentUser.pending](state) {\r\n      state.isFetchingCurrentUser = true;\r\n    },\r\n\r\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = { ...action.payload };\r\n      state.isLoggedIn = true;\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n\r\n    [authOperations.fetchCurrentUser.rejected](state) {\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport contactsReducer from './contacts/reducers';\r\nimport authReducer from '../redux/authorization/auth-slice';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store, persistor } from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Form_input__2nXS9\",\"form\":\"Form_form__u09uj\",\"label\":\"Form_label__2tqMe\",\"formBtn\":\"Form_formBtn__11jzC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__2Dt3Y\",\"activeLink\":\"Navigation_activeLink__1MzO2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNavigation_link__3ZQ3U\",\"activeLink\":\"AuthNavigation_activeLink__1xdFY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Contacts_contacts__2qEAO\",\"input\":\"Contacts_input__3Sy1E\",\"formBtn\":\"Contacts_formBtn__2M7S3\",\"li\":\"Contacts_li__1EIcK\",\"contact\":\"Contacts_contact__1cOfE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formBtn\":\"UserMenu_formBtn__oo27l\",\"username\":\"UserMenu_username__1aGvn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__3bMvF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__14h3Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3m3w1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"styles_link__2z4-Z\",\"activeLink\":\"styles_activeLink__MNoaM\",\"form\":\"styles_form__1qWKj\",\"label\":\"styles_label__BMqj2\",\"text\":\"styles_text__2BiwA\",\"input\":\"styles_input__yazJV\",\"formBtn\":\"styles_formBtn__3dr_d\",\"passwordControl\":\"styles_passwordControl__1Jrgx\"};"],"sourceRoot":""}